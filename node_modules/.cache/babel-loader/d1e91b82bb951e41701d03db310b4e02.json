{"ast":null,"code":"import _asyncToGenerator from\"/Users/olivermrovcak/Desktop/REACT/netflix-clone/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/olivermrovcak/Desktop/REACT/netflix-clone/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/olivermrovcak/Desktop/REACT/netflix-clone/node_modules/@babel/runtime/regenerator/index.js\";import React,{useEffect,useState}from'react';import axios from'../axios';import\"../styles/row.css\";import YouTube from'react-youtube';import movieTrailer from'movie-trailer';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Row(_ref){var title=_ref.title,fetchUrl=_ref.fetchUrl,isLargeRow=_ref.isLargeRow;var opts={height:\"390\",width:\"100%\",playerVars:{// https://developers.google.com/youtube/player_parameters\nautoplay:1}};var baseUrl=\"https://image.tmdb.org/t/p/original/\";var _useState=useState([]),_useState2=_slicedToArray(_useState,2),movies=_useState2[0],setMovies=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),trailerUrl=_useState4[0],setTrailer=_useState4[1];useEffect(function(){//if [] spusti iba jediny raz\nfunction fetchData(){return _fetchData.apply(this,arguments);}function _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var request;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(fetchUrl);case 2:request=_context.sent;setMovies(request.data.results);return _context.abrupt(\"return\",request);case 5:case\"end\":return _context.stop();}}},_callee);}));return _fetchData.apply(this,arguments);}fetchData();},[fetchUrl]);var handleClick=function handleClick(x){console.log(x);if(trailerUrl){setTrailer(\"\");}else{console.log(movieTrailer(null,{tmdbId:x}));movieTrailer(null,{tmdbId:x}).then(function(url){console.log(url);var urlParams=new URLSearchParams(new URL(url).search);setTrailer(urlParams.get('v'));}).catch(function(error){return console.log(error);});}};var handleClickFake=function handleClickFake(){if(trailerUrl){setTrailer(\"\");}else{setTrailer(\"fipVnRjUcyw\");}};return/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"h2\",{children:title}),/*#__PURE__*/_jsx(\"div\",{className:\"row-posters\",children:movies.map(function(movie){return/*#__PURE__*/_jsx(\"img\",{onClick:function onClick(){return handleClick(movie.id);},className:\"row-poster \".concat(isLargeRow&&\"row-poster-large\"),src:\"\".concat(baseUrl).concat(isLargeRow?movie.poster_path:movie.backdrop_path),alt:movie.name},movie.id);})}),trailerUrl&&/*#__PURE__*/_jsx(YouTube,{videoId:trailerUrl,opts:opts})]});}export default Row;","map":{"version":3,"sources":["/Users/olivermrovcak/Desktop/REACT/netflix-clone/src/comps/Row.js"],"names":["React","useEffect","useState","axios","YouTube","movieTrailer","Row","title","fetchUrl","isLargeRow","opts","height","width","playerVars","autoplay","baseUrl","movies","setMovies","trailerUrl","setTrailer","fetchData","get","request","data","results","handleClick","x","console","log","tmdbId","then","url","urlParams","URLSearchParams","URL","search","catch","error","handleClickFake","map","movie","id","poster_path","backdrop_path","name"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from '../axios';\nimport \"../styles/row.css\";\nimport YouTube from 'react-youtube';\nimport movieTrailer from 'movie-trailer';\n\nfunction Row({ title, fetchUrl, isLargeRow }) {\n\n    const opts = {\n        height: \"390\",\n        width: \"100%\",\n        playerVars: {\n            // https://developers.google.com/youtube/player_parameters\n            autoplay: 1,\n          },\n    }\n\n    const baseUrl = \"https://image.tmdb.org/t/p/original/\";\n\n    const[movies, setMovies] = useState([]);\n    const[trailerUrl, setTrailer] = useState(\"\");\n    \n\n    useEffect(() => {\n\n        //if [] spusti iba jediny raz\n        async function fetchData() {\n            const request = await axios.get(fetchUrl);\n            setMovies(request.data.results);\n            \n            return request;\n\n        }\n        fetchData();\n    },[fetchUrl]);\n\n \n\n    const handleClick = (x) => {\n        console.log(x);\n        if(trailerUrl) {\n            setTrailer(\"\");\n        } else {\n            \n            console.log(movieTrailer( null, { tmdbId: x} ));\n            movieTrailer( null, { tmdbId: x} )\n            \n            .then(url => {\n                console.log(url);\n                const urlParams =new URLSearchParams(new URL(url).search) ;\n                setTrailer(urlParams.get('v'))\n            })\n            .catch((error) =>console.log(error));\n        }\n\n    }\n\n    const handleClickFake = () => {\n        if(trailerUrl) {\n            setTrailer(\"\");\n        } else {\n            \n            setTrailer(\"fipVnRjUcyw\");\n        }\n\n    }\n    \n  return (\n  <div className='row' >\n      \n        <h2>{title}</h2>\n        <div className='row-posters'>\n            {movies.map(movie => (\n                <img \n                \n                key={movie.id}\n                onClick={() => handleClick(movie.id)}\n                className={`row-poster ${isLargeRow && \"row-poster-large\"}`}\n                src={`${baseUrl}${isLargeRow ? movie.poster_path : movie.backdrop_path}`} \n                alt={movie.name} />\n                \n\n            ))}\n        </div>\n\n        {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\n  </div>\n  )\n}\n\nexport default Row;\n"]},"metadata":{},"sourceType":"module"}